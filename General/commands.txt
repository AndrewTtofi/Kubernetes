CRUD commands:
    Deployments:
    Create Deployment:  kubectl create deployment [name]
    Edit Deployment: kubectl edit deployment [name]
    Delete Deployment: kubectl delete deployment [name]

    Pods:
    Create Pod: kubectl create pod pod_name.yml (Need to first create the actual yaml file)
    Delete Pod: kubectl delete pod pod_name
    Edit Pod: kubectl edit pod pod_name (all of the configuration will come up and let us edit MOST of the attributes)
    Edit Pod (2): Alter the yaml file that created the pod then -> kubectl apply -f pod_name.yaml
    Get more info for a Pod: kubectl get pod po_name -o wide
    Describe a Pod: kubectl describe pod pod_name
    
    Namespaces:
    Create a Namespace: kubectl create ns namespace_name
    Delete a Namespace: kubectl delete ns namespace_name
    Add a Pod in a Namespace: in the pod yaml file -> Under metadata -> namespace: namespace_name
    List Pods in a Namespace: kubectl get pods -n namespace_name pod_name
    
Status of different K8S components:
    kubectl get nodes | services | replicaset | deployment

Debugging pods:
    Log to console: kubectl logs [pod name]
    Get Interactive Terminal:   kubectl exec -it [pod name] -- bin/bash
    Get info about pod: kubectl describe pod [pod name]

Use configuration file for CRUD:
    Apply a configuration file: kubectl apply -f [file name]
    Delete with configuration file: kubectl delete -f [file name]

Edit Pods
    A Note on Editing Existing Pods
    In any of the practical quizzes if you are asked to edit an existing POD, please note the following:
    If you are given a pod definition file, edit that file and use it to create a new pod.
    If you are not given a pod definition file, you may extract the definition to a file using the below command:
        kubectl get pod <pod-name> -o yaml > pod-definition.yaml
    Then edit the file to make the necessary changes, delete and re-create the pod.
    Use the kubectl edit pod <pod-name> command to edit pod properties.



